name: github pages

# masterブランチにプッシュしたときjobsに記述した操作を行う
on:
  push:
    branches:
      - release
      - main
jobs:
  build-deploy:
    # ubuntu OS を仮想マシン上に用意する
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      # Node.js環境のセットアップを行う
      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      # npm install の際にキャッシュを使うよう設定
      - name: cache node_modules
        id: node_modules_cache_id
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            packages/*/node_modules
            distributions/*/node_modules
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      # package.jsonに基づき依存パッケージをインストールする
      - name: install
        run: yarn install --frozen-lockfile

      - name: cache workspace
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            packages/*/node_modules
            distributions/*/node_modules
            packages/*/dist
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-nuxt-${{ github.sha }}


      # Next.jsアプリをビルドする
      # プロジェクトルート直下に.nextディレクトリができる
      - name: build
        run: yarn run build
        env:
          BASE_PATH: /beta-yokohma-a-mochi

      # 静的なHTMLとしてNext.jsアプリを生成する
      # プロジェクトルート直下にoutディレクトリができる
      # そのなかに、HTMLファイル群と、それらが読み込むJSファイル群を収めた_nextディレクトリがある
      - name: export
        run: yarn run export
        env:
          BASE_PATH: /beta-yokohma-a-mochi
      # しかしGitHub Pagesの仕様として_から始まるディレクトリが見えず404となる
      # つまりHTMLからJSを読み込めない
      # これを回避するために.nojekyllファイルをoutディレクトリに作る
      - name: add nojekyll
        run: touch ./out/.nojekyll

      # gh-pagesブランチにoutディレクトリの中身をプッシュする
      # gh-pagesブランチは自動的に作成される
      - name: deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./out
